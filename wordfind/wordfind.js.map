{"version":3,"sources":["wordfind.js"],"sourcesContent":["// Frequencies of letters in american-english-huge, so it's not weighted by\n// word frequency -- this is probably more appropriate to a wordfind because\n// each target word appears exactly once.\nconst defaultDistribution = {\n  \"a\": 209614,\n  \"b\": 49285,\n  \"c\": 105029,\n  \"d\": 84333,\n  \"e\": 284526,\n  \"f\": 30250,\n  \"g\": 68224,\n  \"h\": 66213,\n  \"i\": 228274,\n  \"j\": 4791,\n  \"k\": 24652,\n  \"l\": 139497,\n  \"m\": 76024,\n  \"n\": 178431,\n  \"o\": 172692,\n  \"p\": 75941,\n  \"q\": 4439,\n  \"r\": 180599,\n  \"s\": 235404,\n  \"t\": 168167,\n  \"u\": 85126,\n  \"v\": 25314,\n  \"w\": 20459,\n  \"x\": 7304,\n  \"y\": 42738,\n  \"z\": 13449,\n};\n\nfunction getRandomLetters(count, random=Math.random, distribution=defaultDistribution) {\n  const letters = Object.entries(distribution);\n  const total = Object.values(distribution).reduce((acc, x) => acc + x, 0);\n\n  const rv = [];\n  for(let i = 0; i < count; i++) {\n    let x = random() * total;\n    for(let entry of letters) {\n      x -= entry[1];\n      if(x < 0) {\n        rv.push(entry[0]);\n        break;\n      }\n    }\n  }\n\n  return rv;\n}\n\nfunction getRandomIntInRangeInclusive(min, max, random=Math.random) {\n  return Math.floor(random() * (max - min + 1)) + min;\n}\n\nfunction canFitWord(matrix, startPos, dir, word) {\n  let pos = [...startPos];\n  for(let i = 0; i < word.length; i++) {\n    if(matrix[pos[0]][pos[1]] != null && matrix[pos[0]][pos[1]] != word[i]) {\n      return false;\n    }\n    pos[0] += dir[0];\n    pos[1] += dir[1];\n  }\n\n  return true;\n}\n\nfunction tryFitWord(matrix, startPos, dir, word) {\n  const success = canFitWord(matrix, startPos, dir, word);\n  if(success) {\n    let pos = [...startPos];\n    for(let i = 0; i < word.length; i++) {\n      matrix[pos[0]][pos[1]] = word[i];\n      pos[0] += dir[0];\n      pos[1] += dir[1];\n    }\n  }\n  return success;\n}\n\nfunction generate(width, height, words, random=Math.random) {\n  // if any of the words is too big for the grid, obviously this is impossible\n  for(let word of words) {\n    if(word.length > width && word.length > height) {\n      return false;\n    }\n  }\n\n  const matrix = new Array(height).fill().map(() => new Array(width).fill(null));\n\n  for(let word of words) {\n    // Allow any of the eight directions if they could conceivably fit into the\n    // grid -- there is no \"easy\" difficulty where backwards isn't allowed.\n    const vOptions = word.length <= height ? [-1, 0, 1] : [0];\n    const hOptions = word.length <= width ? [-1, 0, 1] : [0];\n    const dirOptions = vOptions.flatMap(x => hOptions.map(y => [x, y])).filter(x => !(x[0] == 0 && x[1] == 0));\n\n    const options = [];\n    for(let dir of dirOptions) {\n      const rMin = dir[0] == -1 ? word.length - 1: 0;\n      const rMax = dir[0] == 1 ? height - word.length : height - 1;\n      const cMin = dir[1] == -1 ? word.length - 1: 0;\n      const cMax = dir[1] == 1 ? width - word.length : width - 1;\n\n      const optionsForDir = [];\n      for(let r0 = rMin; r0 <= rMax; r0++) {\n        for(let c0 = cMin; c0 <= cMax; c0++) {\n          if(canFitWord(matrix, [r0, c0], dir, word)) {\n            optionsForDir.push([[r0, c0], dir]);\n          }\n        }\n      }\n      if(optionsForDir.length > 0) {\n        options.push(optionsForDir);\n      }\n    }\n\n    if(options.length == 0) {\n      console.warn(`cannot place word: ${word}`);\n      return false;\n    }\n\n    const optionsForDir = options[Math.floor(random() * options.length)];\n    // console.log(`exhaustive search gives ${options.length} dir options, ${optionsForDir.length} placement options for chosen dir`);\n    const option = optionsForDir[Math.floor(random() * optionsForDir.length)];\n    if(!tryFitWord(matrix, option[0], option[1], word)) {\n      console.error('pre-approved placement option failed');\n      return false;\n    }\n  }\n\n  for(let i = 0; i < height; i++) {\n    for(let j = 0; j < width; j++) {\n      if(matrix[i][j] == null) {\n        matrix[i][j] = getRandomLetters(1, random)[0];\n      } else {\n        matrix[i][j] = matrix[i][j].toUpperCase();\n      }\n    }\n  }\n\n  return matrix;\n}\n\nfunction getCoords(td) {\n  const tr = td.parentNode;\n  const table = tr.parentNode;\n  const col = [...tr.children].findIndex(x => x == td);\n  const row = [...table.children].findIndex(x => x == tr);\n  return [row, col];\n}\n\nfunction handleClick(event) {\n  const td = event.target;\n  const tr = td.parentNode;\n  const table = tr.parentNode;\n  const selected = [...table.querySelectorAll('.selected')];\n  if(selected.length > 1) {\n    // no idea what's going on\n    console.error('invalid state');\n    return;\n  } else if(selected.length == 1 && selected[0] != td) {\n    // there's one td already selected and it's not the one you just clicked\n    const existingPos = getCoords(selected[0]);\n    const eventPos = getCoords(td);\n    const dy = eventPos[0] - existingPos[0];\n    const dx = eventPos[1] - existingPos[1];\n\n    // we know it's a different td because we checked, so assume that we don't have dy == dx == 0\n    if(Math.abs(dy) == Math.abs(dx) || dy == 0 || dx == 0) {\n      const dir = [Math.sign(dy), Math.sign(dx)];\n      const len = Math.max(Math.abs(dy), Math.abs(dx));\n      const tiles = [];\n      for(let i = 0; i <= len; i++) {\n        const y = existingPos[0] + dir[0] * i;\n        const x = existingPos[1] + dir[1] * i;\n        tiles.push(table.children[y].children[x]);\n      }\n      // these are already in uppercase, but to be certain we get a case-insensitive comparison, convert again\n      const forward = tiles.map(x => x.innerText).join('').toUpperCase();\n      const backward = tiles.toReversed().map(x => x.innerText).join('').toUpperCase();\n\n      const targetWords = [...document.querySelectorAll('.target-word:not(.found)')];\n      const target = targetWords.find(x => x.innerText.toUpperCase() == forward || x.innerText.toUpperCase() == backward);\n\n      selected[0].classList.remove('selected');\n      if(target) {\n        target.classList.add('found');\n        tiles.forEach(x => x.classList.add('found'));\n      } else {\n        td.classList.add('selected');\n      }\n    } else {\n      selected[0].classList.remove('selected');\n      td.classList.add('selected');\n    }\n  } else {\n    // either nothing is selected or it's the current td, so just toggle it\n    td.classList.toggle('selected');\n  }\n}\n\nfunction render() {\n  const width = parseInt(document.getElementById('width').value) || 10;\n  const height = parseInt(document.getElementById('height').value) || 10;\n  const words = [...document.querySelectorAll('.input-word')].map(el => el.innerText);\n\n  function xoshiro128ss(a, b, c, d) {\n    return function() {\n      let t = b << 9, r = b * 5;\n      r = (r << 7 | r >>> 25) * 9;\n      c ^= a;\n      d ^= b;\n      b ^= c;\n      a ^= d;\n      c ^= t;\n      d = d << 11 | d >>> 21;\n      return (r >>> 0) / 4294967296;\n    }\n  }\n\n  // initialize with h0-h3 from SHA-1\n  const matrix = generate(width, height, words, xoshiro128ss(0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476));\n\n  const queryParams = {\n    width: width,\n    height: height,\n    words: words.join(','),\n  };\n  const url = '?' + Object.entries(queryParams).filter(x => !!x[1]).map(x => `${x[0]}=${x[1]}`).join('&');\n  history.replaceState(null, '', url);\n\n  const container = document.getElementById('container');\n  container.replaceChildren();\n  if(matrix) {\n    const table = document.createElement('table');\n    table.className = 'matrix';\n    matrix.forEach(row => {\n      const tr = document.createElement('tr');\n      row.forEach(cell => {\n        const td = document.createElement('td');\n        if(cell == cell.toUpperCase()) {\n          td.className = 'target';\n        }\n        td.addEventListener('click', handleClick);\n        td.append(cell.toUpperCase());\n        tr.appendChild(td);\n      });\n      table.appendChild(tr);\n    });\n    container.appendChild(table);\n    const wordlist = document.createElement('div');\n    wordlist.className = 'wordlist';\n    words.sort((a, b) => a.localeCompare(b)).forEach(word => {\n      const wordDiv = document.createElement('div');\n      wordDiv.className = 'target-word';\n      wordDiv.append(word.toUpperCase());\n      wordlist.appendChild(wordDiv);\n    });\n    container.appendChild(wordlist);\n    setShowSolution();\n  } else {\n    const div = document.createElement('div');\n    div.className = 'error';\n    div.append('Failed to generate a valid wordfind, you may need to use a larger size to fit long words or a large number of words');\n    container.appendChild(div);\n  }\n}\n\nfunction addWord(value) {\n  const input = document.getElementById('newword');\n  const inputValue = value || input.value;\n  if(inputValue.length == 0) {\n    return false;\n  }\n  const trimmed = inputValue.trim();\n  if(trimmed.length == 0) {\n    return false;\n  }\n  const stripped = trimmed.replaceAll(/[^a-z]/ig, '');\n  if(stripped != trimmed) {\n    return false;\n  }\n  const normalized = stripped.toLowerCase();\n\n  const word = document.createElement('div');\n  word.append(normalized);\n  word.className = 'input-word';\n  word.addEventListener('click', event => {\n    event.target.parentNode.removeChild(event.target);\n    render();\n  });\n  document.getElementById('input-words').appendChild(word);\n\n  if(!value) {\n    input.value = '';\n  }\n  return true;\n}\n\nfunction setShowSolution() {\n  document.querySelectorAll('.matrix').forEach(m => m.classList.toggle('show-solution', document.getElementById('show-solution').checked));\n}\n\nfunction init() {\n  document.getElementById('addword').addEventListener('click', () => addWord() && render());\n  document.getElementById('newword').addEventListener('keyup', event => event.keyCode == 13 && addWord() && render());\n  ['width', 'height'].forEach(id => document.getElementById(id).addEventListener('change', render));\n  document.getElementById('show-solution').addEventListener('change', setShowSolution);\n\n  const queryParams = Object.fromEntries(window.location.search.replace(/^\\?/, '').split(/&/).map(p => {\n    const match = /([^=]+)=?(.*)/.exec(p);\n    return match ? [match[1], match[2]] : null;\n  }).filter(x => !!x));\n  if(queryParams.width) {\n    document.getElementById('width').value = queryParams.width;\n  }\n  if(queryParams.height) {\n    document.getElementById('height').value = queryParams.height;\n  }\n  if(queryParams.words) {\n    queryParams.words.split(/,/).forEach(addWord);\n  }\n}\n\ninit();\nrender();\n"],"names":["defaultDistribution","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","getRandomLetters","count","random","Math","distribution","letters","Object","entries","total","values","reduce","acc","rv","let","entry","push","getRandomIntInRangeInclusive","min","max","floor","canFitWord","matrix","startPos","dir","word","pos","length","tryFitWord","success","generate","width","height","words","Array","fill","map","vOptions","hOptions","options","flatMap","filter","rMin","rMax","cMin","cMax","optionsForDir","r0","c0","console","warn","option","error","toUpperCase","getCoords","td","tr","parentNode","table","col","children","findIndex","handleClick","event","target","selected","querySelectorAll","existingPos","eventPos","dy","dx","abs","sign","len","tiles","forward","innerText","join","backward","toReversed","document","find","classList","remove","add","forEach","toggle","render","parseInt","getElementById","value","el","queryParams","url","container","history","replaceState","replaceChildren","createElement","wordlist","className","row","cell","addEventListener","append","appendChild","sort","localeCompare","wordDiv","setShowSolution","div","addWord","input","inputValue","trimmed","trim","stripped","replaceAll","normalized","toLowerCase","removeChild","checked","init","keyCode","id","fromEntries","window","location","search","replace","split","match","exec"],"mappings":"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"}